#!/bin/bash

set -e

# set required environment variables
export MODULESHOME="/usr/share/Modules"

# this wrapper needs to build two ICON binaries
MY_DIR=$(cd "$(dirname "$0")"; pwd)
ICON_DIR=$(cd "${MY_DIR}/../.."; pwd)

# =============================================================================
# these setting are critical to proper logging by buildbot
export VE_DIR="${ICON_DIR}/vector"
export VH_DIR="${ICON_DIR}/host"

# create vector engine binary
mkdir -p ${VE_DIR}
cd ${VE_DIR}

${ICON_DIR}/config/dwd/rcl.VE.bb-dwd_nec_hybrid

if test 0 -ne "$?" && test ! -z "${BB_NAME}"; then
  echo " ***** Configuration logs from '$(pwd)' ***** "
  for f in $(find . -name 'config.log' -print); do
    echo " ||||| '$f' ||||| "
    cat "$f"
  done
  echo " ***** End of configuration logs from '$(pwd)' ***** "
fi

MAKE_PROCS=14
make -j ${MAKE_PROCS} |& tee make.log

cd -

# copy a valid info file to where runexp expects it. buildbot is doing
# in-source-builds, only at the moment
cp -v $OLDPWD/run/set-up.info run/

# =============================================================================
# create vector host binary
mkdir -p ${VH_DIR}
cd ${VH_DIR}

${ICON_DIR}/config/dwd/rcl.VH.bb-dwd_nec_hybrid

if test 0 -ne "$?" && test ! -z "${BB_NAME}"; then
  echo " ***** Configuration logs from '$(pwd)' ***** "
  for f in $(find . -name 'config.log' -print); do
    echo " ||||| '$f' ||||| "
    cat "$f"
  done
  echo " ***** End of configuration logs from '$(pwd)' ***** "
fi

MAKE_PROCS=14
make -j ${MAKE_PROCS} |& tee make.log

cd -

VECTOR_BINARY="${VE_DIR}/bin/icon"
HOST_BINARY="${VH_DIR}/bin/icon"

set +e
find "${VE_DIR}" "${VH_DIR}"
file "$VECTOR_BINARY" "$HOST_BINARY"
