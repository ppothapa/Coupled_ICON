#!/bin/bash

set -e

# set required environment variables
export MODULESHOME="/usr/share/Modules"

# this wrapper needs to build two ICON binaries
MY_DIR=$(cd "$(dirname "$0")"; pwd)
ICON_DIR=$(cd "${MY_DIR}/../.."; pwd)

# create vector engine binary
${ICON_DIR}/config/dwd/rcl.VE.bb-dwd_nec_yac2 --prefix=${PWD}/vector
MAKE_PROCS=14
make -j ${MAKE_PROCS}
make install


# Save the _vector_ info file as it is required for
# create_target_header afterwards.
mv -v run/set-up.info run/set-up.info.vector

make distclean

# create vector host binary
${ICON_DIR}/config/dwd/rcl.VH.bb-dwd_nec_yac2 --prefix=${PWD}/host
MAKE_PROCS=14
make -j ${MAKE_PROCS}
make install

VECTOR_BINARY=${ICON_DIR}/vector/bin/icon
HOST_BINARY=${ICON_DIR}/host/bin/icon

set +e
find "${PWD}/vector" "${PWD}/host"
file "$VECTOR_BINARY" "$HOST_BINARY"

# Restore the _vector_ info file as it is required for create_target_header.
mv -v run/set-up.info.vector run/set-up.info

# Link a temporary directory with lots of space into the experiments subdir. Reruns
# /etc/profile to get a new directory
echo "Link a temporary directory with lots of space into the experiments subdir"
ksh -c '. /etc/profile && echo "TMPDIR: $TMPDIR" && chmod -R go+rx "$TMPDIR" && ln -s "$TMPDIR" experiments'
ls -l "${PWD}/experiments"

# Copy the vector binary to the place, that is stored as builddir in set-up.info.
# Only then it can be found by create_target_header.
cp "${VECTOR_BINARY}" "${PWD}/bin/icon"
