#!/bin/bash

set -eu
unset CDPATH

SCRIPT_DIR=$(cd "$(dirname "$0")"; pwd)
ICON_DIR=$(cd "${SCRIPT_DIR}/../.."; pwd)

MODULES='intel-oneapi-compilers openmpi/4.1.2-intel-2021.5.0' 

SW_ROOT='/sw/spack-levante'

COMPILER_LIB="${SW_ROOT}/intel-oneapi-compilers-2022.0.1-an2cbq/compiler/2022.0.1/linux/compiler/lib/intel64_lin"
COMPILER_LIB="${COMPILER_LIB}:${SW_ROOT}/intel-oneapi-compilers-2022.0.1-an2cbq/compiler/2022.0.1/linux/lib"

HDF5_ROOT="${SW_ROOT}/hdf5-1.12.1-tvymb5"
HDF5_LIBS='-lhdf5_hl -lhdf5'

NETCDF_ROOT="${SW_ROOT}/netcdf-c-4.8.1-2k3cmu"
NETCDF_LIBS='-lnetcdf'

NETCDFF_ROOT="${SW_ROOT}/netcdf-fortran-4.5.3-k6xq5g"
NETCDFF_LIBS='-lnetcdff'

ECCODES_ROOT="${SW_ROOT}/eccodes-2.21.0-3ehkbb"
ECCODES_LIBS='-leccodes'

MKL_FCFLAGS='-qmkl=sequential'
MKL_LDFLAGS="-L/sw/spack-levante/intel-oneapi-mkl-2022.0.1-ttdktf/mkl/latest/lib/intel64 -Wl,-rpath -Wl,/sw/spack-levante/intel-oneapi-mkl-2022.0.1-ttdktf/mkl/latest/lib/intel64"

XML2_ROOT='/usr'
XML2_LIBS='-lxml2'

MPI_ROOT="${SW_ROOT}/openmpi-4.1.2-yfwe6t"

PYTHON='/usr/bin/python3'
################################################################################
PATCH='patch --forward --no-backup-if-mismatch --strip=1 --reject-file=-'
$PATCH -d "${ICON_DIR}/externals/rte-rrtmgp" -i "${SCRIPT_DIR}/levante_intel_patches/gas_fix.patch" || test $? -eq 1 || exit 2
################################################################################


AR='/sw/spack-levante/intel-oneapi-compilers-2022.0.1-an2cbq/compiler/2022.0.1/linux/bin/intel64/xiar'

BUILD_ENV=". /sw/etc/profile.levante; . \"${SCRIPT_DIR}/module_switcher\"; switch_for_module ${MODULES}; export LD_LIBRARY_PATH=\"${HDF5_ROOT}/lib:${XML2_ROOT}/lib:${NETCDF_ROOT}/lib:${NETCDFF_ROOT}/lib:${COMPILER_LIB}:${ECCODES_ROOT}/lib64:\${LD_LIBRARY_PATH}\";"

CC="${MPI_ROOT}/bin/mpicc"
CFLAGS="-no-prec-sqrt -no-prec-div -fast-transcendentals -m64 -march=core-avx2 -mtune=core-avx2 -no-fma -g -gdwarf-4 -ip -pc64 -std=gnu99 -O3 -qno-opt-dynamic-align ${MKL_FCFLAGS}"
CPPFLAGS="-I${HDF5_ROOT}/include -I${NETCDF_ROOT}/include -I${ECCODES_ROOT}/include -I${XML2_ROOT}/include/libxml2"

FC="${MPI_ROOT}/bin/mpif90"
FCFLAGS="-I${NETCDFF_ROOT}/include -gdwarf-4 -g -pc64 -fp-model source ${MKL_FCFLAGS}"
ICON_FCFLAGS='-fp-model source -qoverride-limits -assume realloc_lhs -align array64byte -no-prec-sqrt -no-prec-div -fast-transcendentals -m64 -march=core-avx2 -mtune=core-avx2 -no-fma -g -gdwarf-4 -ip -pc64 -D__LOOP_EXCHANGE -D__SWAPDIM -DIFORT_CONSISTENCY_ENFORCE -DLRTM_FULL_VECTORIZATION -DOCE_SOLVE_OMP -DDO_NOT_COMBINE_PUT_AND_NOCHECK'
ICON_BUNDLED_CFLAGS='-O2 -g -ftz'
ICON_OCEAN_FCFLAGS='-O3 -assume norealloc_lhs -reentrancy threaded -qopt-report-file=stdout -qopt-report=0 -qopt-report-phase=vec'

LDFLAGS="-L${HDF5_ROOT}/lib -L${NETCDF_ROOT}/lib -L${NETCDFF_ROOT}/lib ${MKL_LDFLAGS} -L${XML2_ROOT}/lib64 -L${ECCODES_ROOT}/lib64"
LIBS="-Wl,--as-needed ${XML2_LIBS} ${NETCDFF_LIBS} ${NETCDF_LIBS} ${HDF5_LIBS} ${ECCODES_LIBS}"

MPI_LAUNCH="${MPI_ROOT}/bin/mpiexec"

EXTRA_CONFIG_ARGS='--enable-intel-consistency --enable-vectorized-lrtm --enable-parallel-netcdf --enable-grib2 --enable-yaxt'

################################################################################

"${ICON_DIR}/configure" \
AR="${AR}" \
BUILD_ENV="${BUILD_ENV}" \
CC="${CC}" \
CFLAGS="${CFLAGS}" \
CPPFLAGS="${CPPFLAGS}" \
FC="${FC}" \
FCFLAGS="${FCFLAGS}" \
ICON_FCFLAGS="${ICON_FCFLAGS}" \
ICON_OCEAN_FCFLAGS="${ICON_OCEAN_FCFLAGS}" \
ICON_BUNDLED_CFLAGS="${ICON_BUNDLED_CFLAGS}" \
LDFLAGS="${LDFLAGS}" \
LIBS="${LIBS}" \
MPI_LAUNCH="${MPI_LAUNCH}" \
PYTHON="${PYTHON}" \
${EXTRA_CONFIG_ARGS} \
"$@"

for arg in "$@"; do
  case $arg in
    -help | --help | --hel | --he | -h | -help=r* | --help=r* | --hel=r* | --he=r* | -hr* | -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
      test -n "${EXTRA_CONFIG_ARGS}" && echo '' && echo "This wrapper script ('$0') calls the configure script with the following extra arguments, which might override the default values listed above: ${EXTRA_CONFIG_ARGS}"
      exit 0 ;;
  esac
done

# Copy runscript-related files when building out-of-source:
if test $(pwd) != $(cd "${ICON_DIR}"; pwd); then
  echo "Copying runscript input files from the source directory..."
  rsync -uavz ${ICON_DIR}/run . --exclude='*.in' --exclude='.*' --exclude='standard_*'
  ln -sf -t run/ ${ICON_DIR}/run/standard_*
  ln -sf set-up.info run/SETUP.config
  rsync -uavz ${ICON_DIR}/externals . --exclude='.git' --exclude='*.f90' --exclude='*.F90' --exclude='*.c' --exclude='*.h' --exclude='*.Po' --exclude='tests' --exclude='rrtmgp*.nc' --exclude='*.mod' --exclude='*.o'
  rsync -uavz ${ICON_DIR}/make_runscripts .
  ln -sf ${ICON_DIR}/data
  ln -sf ${ICON_DIR}/vertical_coord_tables
fi

