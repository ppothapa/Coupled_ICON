#!/bin/bash

set -eu
unset CDPATH
ulimit -c 0

MODULES=""

SCRIPT_DIR=$(cd "$(dirname "$0")"; pwd)
ICON_DIR=$(cd "${SCRIPT_DIR}/../.."; pwd)

SW_ROOT='/sw/spack-levante'

GCC_ROOT="${SW_ROOT}/gcc-11.2.0-bcn7mb"

COMPILER_LIB="${SW_ROOT}/nvhpc-22.5-v4oky3/Linux_x86_64/2022/compilers/lib"
COMPILER_LIB="${COMPILER_LIB}:${SW_ROOT}/nvhpc-22.5-v4oky3/Linux_x86_64/22.5/compilers/lib"

HDF5_ROOT="${SW_ROOT}/hdf5-1.12.2-7zpfrp"
HDF5_LIBS='-lhdf5_hl -lhdf5'

NETCDF_ROOT="${SW_ROOT}/netcdf-c-4.9.0-gc7kgj"
NETCDF_LIBS='-lnetcdf'

NETCDFF_ROOT="${SW_ROOT}/netcdf-fortran-4.5.4-syv4qr"
NETCDFF_LIBS='-lnetcdff'

ECCODES_ROOT="${SW_ROOT}/eccodes-2.26.0-6iysux"
ECCODES_LIBS='-leccodes'

XML2_ROOT='/usr'
XML2_LIBS='-lxml2'

FYAML_ROOT='/sw/spack-levante/libfyaml-0.7.12-fvbhgo'
FYAML_LIBS='-lfyaml'

BLAS_LAPACK="${SW_ROOT}/nvhpc-22.5-v4oky3/Linux_x86_64/22.5/compilers/lib"
BLAS_LAPACK_LIBS='-llapack -lblas -lnvf'

CUDA_ROOT="${SW_ROOT}/nvhpc-22.5-v4oky3/Linux_x86_64/2022/cuda"
CUDA_LIBS='-lcudart'

STDCPP_LIBS='-lstdc++'

MPI_ROOT="${SW_ROOT}/openmpi-4.1.4-3qb4sy"

PYTHON='/usr/bin/python3'

BUILD_ENV=". /sw/etc/profile.levante; . \"${SCRIPT_DIR}/module_switcher\"; switch_for_module ${MODULES}; export LD_LIBRARY_PATH=\"${HDF5_ROOT}/lib:${GCC_ROOT}/lib64:${XML2_ROOT}/lib:${NETCDF_ROOT}/lib:${NETCDFF_ROOT}/lib:${CUDA_ROOT}/lib64:${COMPILER_LIB}:${ECCODES_ROOT}/lib64:${FYAML_ROOT}/lib:\${LD_LIBRARY_PATH}\";"

CC="${MPI_ROOT}/bin/mpicc"
CFLAGS="-g -O2"
CPPFLAGS="-I${HDF5_ROOT}/include -I${NETCDF_ROOT}/include -I${ECCODES_ROOT}/include -I${XML2_ROOT}/include/libxml2 -I${FYAML_ROOT}/include"

FC="${MPI_ROOT}/bin/mpif90"
FCFLAGS="-I${NETCDFF_ROOT}/include -g -O2 -Mrecursive -Mallocatable=03 -acc=verystrict -ta=nvidia:cc80 -Minfo=accel,inline -D__SWAPDIM -D__USE_G2G "

LDFLAGS="-L${HDF5_ROOT}/lib -L${GCC_ROOT}/lib64 -L${NETCDF_ROOT}/lib -L${NETCDFF_ROOT}/lib -L${XML2_ROOT}/lib64 -L${CUDA_ROOT}/lib64 -L${ECCODES_ROOT}/lib64 -L${FYAML_ROOT}/lib"
LIBS="-Wl,--as-needed ${XML2_LIBS} ${BLAS_LAPACK_LIBS} ${STDCPP_LIBS} ${CUDA_LIBS} ${NETCDFF_LIBS} ${NETCDF_LIBS} ${HDF5_LIBS} ${ECCODES_LIBS} -lrt"

NVCC="${SW_ROOT}/nvhpc-22.5-v4oky3/Linux_x86_64/22.5/compilers/bin/nvcc"
NVCFLAGS='--std=c++11 -arch=sm_80 -g -O3'

MPI_LAUNCH="${MPI_ROOT}/bin/mpiexec"

EXTRA_CONFIG_ARGS='--disable-loop-exchange --enable-gpu --with-external-cub --disable-grib2 '

EXTRA_CONFIG_ARGS+='--disable-mpi-checks --disable-coupling'
################################################################################

"${ICON_DIR}/configure" \
BUILD_ENV="${BUILD_ENV}" \
CC="${CC}" \
CFLAGS="${CFLAGS}" \
CPPFLAGS="${CPPFLAGS}" \
FC="${FC}" \
FCFLAGS="${FCFLAGS}" \
LDFLAGS="${LDFLAGS}" \
LIBS="${LIBS}" \
MPI_LAUNCH="${MPI_LAUNCH}" \
NVCC="$NVCC" \
NVCFLAGS="$NVCFLAGS" \
${EXTRA_CONFIG_ARGS} \
"$@"

for arg in "$@"; do
  case $arg in
    -help | --help | --hel | --he | -h | -help=r* | --help=r* | --hel=r* | --he=r* | -hr* | -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
      test -n "${EXTRA_CONFIG_ARGS}" && echo '' && echo "This wrapper script ('$0') calls the configure script with the following extra arguments, which might override the default values listed above: ${EXTRA_CONFIG_ARGS}"
      exit 0 ;;
  esac
done

# Copy runscript-related files when building out-of-source:
if test $(pwd) != $(cd "${ICON_DIR}"; pwd); then
  echo "Copying runscript input files from the source directory..."
  rsync -uavz ${ICON_DIR}/run . --exclude='*.in' --exclude='.*' --exclude='standard_*'
  ln -sf -t run/ ${ICON_DIR}/run/standard_*
  ln -sf set-up.info run/SETUP.config
  rsync -uavz ${ICON_DIR}/externals . --exclude='.git' --exclude='*.f90' --exclude='*.F90' --exclude='*.c' --exclude='*.h' --exclude='*.Po' --exclude='tests' --exclude='*.mod' --exclude='*.o'
  rsync -uavz ${ICON_DIR}/make_runscripts .
  rsync -uavz ${ICON_DIR}/scripts .
  ln -sf ${ICON_DIR}/data
  ln -sf ${ICON_DIR}/vertical_coord_tables
fi

