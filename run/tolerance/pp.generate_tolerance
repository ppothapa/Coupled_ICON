#!/bin/bash

# ICON
#
# ------------------------------------------
# Copyright (C) 2004-2024, DWD, MPI-M, DKRZ, KIT, ETH, MeteoSwiss
# Contact information: icon-model.org
# See AUTHORS.TXT for a list of authors
# See LICENSES/ for license information
# SPDX-License-Identifier: BSD-3-Clause
# ------------------------------------------

set -euo pipefail

# This is the generic file that is used to generate probtest tolerances

# This file will be copied on the fly by list_part_tolerance before adding it with addexp.

# set basic name
probtest_exp=${EXPNAME#generate_tolerance_}

echo "Generate new tolerance data for '$probtest_exp' (using job $EXPNAME)"

base_exp="${base_exp:-${probtest_exp}}"

builder=$(echo "${BB_NAME}" | tr '[:upper:]' '[:lower:]')
model_output_dir="${basedir}/experiments/${base_exp}"

# make sure the resulting data and directories are global readable
umask 0022

# path to probtest script
PROBTEST="${basedir}/externals/probtest/probtest.py"

stats_file_name="stats_${probtest_exp}_{member_id}.csv"
default_reference_stats_file_name="stats_${probtest_exp}_ref.csv"
reference_file_name="${model_output_dir}/${probtest_exp}_reference.csv"

if [[ -z "$probtest_exp" ]]; then
    echo "ERROR: \$probtest_exp not set"
    echo "probtest_exp is required for pp.generate_tolerance"
    exit 1
fi
source tolerance/set_probtest_file_id "$probtest_exp"
if (( ${#probtest_file_id[@]} < 3 )) ; then
    echo "ERROR: \$probtest_file_id has not been set or has less then 3 entries. Current value:"
    echo "    ${probtest_file_id[*]}"
    exit 2
fi

# set up probtest config file
export PROBTEST_CONFIG="${probtest_exp}-config.json"
# set global arguments for reference generation (must be in sync with list_part_tolerance)
if [[ "$builder" == *"mixed"* ]];
then
  member_ids=mixed_1,mixed_2,mixed_3,mixed_4,mixed_5,mixed_6,mixed_7,mixed_8,mixed_9,mixed_10
else
  member_ids=double_1,double_2,double_3,double_4,double_5,double_6,double_7,double_8,double_9,double_10
fi
"$PROBTEST" init \
    --codebase-install "${basedir}" \
    "${probtest_file_id[@]}" \
    --experiment-name "${base_exp}" \
    --config "${PROBTEST_CONFIG}" \
    --reference "${model_output_dir}" \
    --member_ids "${member_ids}"

# create stats file for each seed (layer-wise max/min/mean)
"$PROBTEST" stats --ensemble --stats-file-name "$stats_file_name" || exit 3

# store the reference stats file
echo "storing reference ${default_reference_stats_file_name} to ${reference_file_name}"
cp "$default_reference_stats_file_name" "$reference_file_name" || exit 4

# compute tolerance range from above stats files (maximum spread across all pairs of stats files and maximum across all layers)
"$PROBTEST" tolerance --stats-file-name "$stats_file_name" || exit 5

# exit 0 on success (and don't execute any appended scripts)
exit 0
