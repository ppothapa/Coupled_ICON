#=============================================================================
# Aqua Planet Experiment (APE)
author_list="Marco Giorgetta, Sebastian Mueller, Sebastian Rast, MPIM"
#=============================================================================
# This file describes an aqua planet experiment based on the non-hydrostatic atmosphere and the
# ECHAM physics. The experiment is intialized analytically and uses constant-in-time
# boundary conditions for:
# - SST and sea ice
# - spectral solar irradiation
# - well mixed greenhouse gases CO2, CH4, N2O, CFCs
# - O3 concentration
# No aerosols are used
# _bb_table_Description_  aqua planet experiment
# _bb_table_Model_        non-hydrostatic atmosphere with ECHAM physics
#=============================================================================
# (1) Variables provided by the scripting mechanism
# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# icon_data_poolFolder          = base directory, where grids/, input/ and setup/ exist
# nproma                        = blocking length for array dimensioning and inner loop lengths
icon_data_poolFolder="${icon_data_rootFolder:-/pool/data/ICON}/grids/public/mpim"
icon_data_poolFolder_gases="/pool/data/ICON/grids/private/mpim/icon_preprocessing/source"
#icon_data_poolFolderPrivate="${icon_data_rootFolder:-/pool/data/ICON}/grids/private/mpim"
#--------------------------------------------------------------------------------------------------
# domain globe
grid_id=0033
grid_refinement=R02B08
grid_label=G
grid_name=icon_grid_${grid_id}_${grid_refinement}_${grid_label}
atmo_dyn_grids="'${grid_name}.nc',"
# horizontal grid(s)
grids_folder=${icon_data_poolFolder}/${grid_id}
# start and end date+time
start_date=${start_date:="1979-09-01T00:00:00Z"}
            end_date=${end_date:="1979-11-01T00:00:00Z"}

calendar="360 day year"

# restart intervals
checkpoint_interval="P5D"
restart_interval="P10D"

# output intervals
output_interval="PT1H"
output_interval_3d="PT3H"
file_interval="P1D"
output_interval_day="P1D"
file_interval_day_avg="P10D"

# namelist files
atmo_namelist=NAMELIST_${EXPNAME}_atm

#--------------------------------------------------------------------------------------------------
# (2) Output control
# ------------------
# asynchronous diagnostic output processes
# ----------------------------------------
mpi_atm_io_procs=3                 # for atmosphere (2d and 3d, lnd and dyamond) (8+14
# output file selection
# ---------------------
# Note that "mpi_atm_io_procs" must match the number of output files
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>

output_atm_vgrid=no                # produces 1 atm file
output_atm_debug=no                # produces 1 atm file
output_atm_3d=yes                   # produces 2 atm file
output_atm_2d=yes                  # produces 4 atm file
output_phy_3d=no                   # produces 1 atm file
output_trc_3d=no                   # produces 1 atm file

#--------------------------------------------------------------------------------------------------
# (3) Define the model configuration

# atmospheric dynamics and physics
# --------------------------------
cat > ${atmo_namelist} << EOF
!
&parallel_nml
 nproma           = ${nproma}
 nproma_sub       = 8000
 num_io_procs      = ${mpi_atm_io_procs}
 num_restart_procs = 300
 io_process_stride = 12
 io_proc_chunk_size = 36
/
&grid_nml
 dynamics_grid_filename = ${atmo_dyn_grids}
/
&run_nml
 num_lev          = 90          ! number of full levels
 modelTimeStep    = "PT1M"
 ltestcase        = .TRUE.      ! run testcase
 ldynamics        = .TRUE.      ! dynamics
 ltransport       = .TRUE.      ! transport
 iforcing         = 2           ! 0: none, 1: HS, 2: ECHAM, 3: NWP
 output           = 'nml'
 msg_level        = 15          ! level of details report during integration
 restart_filename = "${EXPNAME}_restart_atm_<rsttime>.nc"
 activate_sync_timers = .TRUE.
/
&nh_testcase_nml
 nh_test_name     = 'APE_aes_init'
 ape_sst_case     = 'sst_qobs'
 zp_ape           = 101325
 ztmc_ape         = 25.006
/
&nonhydrostatic_nml
 ndyn_substeps    = 5           ! dtime/dt_dyn
 damp_height      = 50000.      ! [m]
 rayleigh_coeff   = 0.10
 vwind_offctr     = 0.2
 divdamp_fac      = 0.004
/
&interpol_nml
 rbf_scale_mode_ll = 1
/
&sleve_nml
 min_lay_thckn    = 25.         ! [m]
 max_lay_thckn    = 400.   ! maximum layer thickness below htop_thcknlimit
 htop_thcknlimit  = 14000  ! this implies that the upcoming COSMO-EU nest will have 60 levels
 top_height       = 75000.      ! [m]
 stretch_fac      = 0.9
 decay_scale_1    = 4000.       ! [m]
 decay_scale_2    = 2500.       ! [m]
 decay_exp        = 1.2
 flat_height      = 16000.      ! [m]
/
&initicon_nml
 pinit_seed       = 0           ! seed for perturbation of initial model state. no perturbation by default
 pinit_amplitude  = 0.          ! amplitude of perturbation
/
&diffusion_nml
/
&transport_nml
 tracer_names     = 'hus','clw','cli', 'qr', 'qs', 'qg'
 ivadv_tracer     =    3 ,   3 ,   3 ,   3 ,   3 ,   3
 itype_hlimit     =    3 ,   4 ,   4 ,   4 ,   4 ,   4
 ihadv_tracer     =   52 ,   2 ,   2 ,   2 ,   2 ,   2
/
&aes_phy_nml
!
! domain 1
! --------
!
! atmospheric phyiscs (""=never)
 aes_phy_config(1)%dt_rad = "PT20M"
 aes_phy_config(1)%dt_vdf = "PT1M"
 aes_phy_config(1)%dt_mig = "PT1M"
!
! surface (.TRUE. or .FALSE.)
 aes_phy_config(1)%ljsb   = .FALSE.
 aes_phy_config(1)%lamip  = .FALSE.
 aes_phy_config(1)%lice   = .FALSE.
 aes_phy_config(1)%lmlo   = .FALSE.
 aes_phy_config(1)%llake  = .FALSE.
/
&aes_rad_nml
!
! domain 1
! --------
!
 aes_rad_config(1)%isolrad    =  2
 aes_rad_config(1)%cecc       = 0.0
 aes_rad_config(1)%cobld      = 0.0
 aes_rad_config(1)%irad_h2o   =  1
 aes_rad_config(1)%irad_co2   =  2
 aes_rad_config(1)%irad_ch4   =  0
 aes_rad_config(1)%irad_n2o   =  0
 aes_rad_config(1)%irad_o3    =  4
 aes_rad_config(1)%irad_o2    =  0
 aes_rad_config(1)%irad_cfc11 =  0
 aes_rad_config(1)%irad_cfc12 =  0
 aes_rad_config(1)%irad_aero  =  0
/
&aes_vdf_nml
 aes_vdf_config(1)%pr0        =  0.7
 aes_vdf_config(1)%turb       =  2     ! Smagorinsky
/
&aes_cop_nml
 aes_cop_config(1)%cn1lnd     =  50.0
 aes_cop_config(1)%cn2lnd     = 220.0
 aes_cop_config(1)%cn1sea     =  50.0
 aes_cop_config(1)%cn2sea     = 100.0
 aes_cop_config(1)%cinhomi    =   1.0
 aes_cop_config(1)%cinhoml1   =   0.66
 aes_cop_config(1)%cinhoml2   =   0.66
 aes_cop_config(1)%cinhoml3   =   0.66
/
&aes_mig_nml
 aes_mig_config(1)%mu_rain        = 0.5
 aes_mig_config(1)%rain_n0_factor = 0.1
 aes_mig_config(1)%v0snow         = 25.
! aes_mig_config(1)%zvz0i          = 3.29  ! Terminal fall velocity of ice  (original value of Heymsfield+Donner 1990: 3.29)
/
&aes_cov_nml
 aes_cov_config(1)%icov       = 3     ! 0/1 cloud cover based on cloud water and ice
 aes_cov_config(1)%cqx        = 1.e-6
/
EOF

#--------------------------------------------------------------------------------------------------

# (4) Define the input

# model files
#
add_link_file ${basedir}/externals/rte-rrtmgp/rrtmgp/data/rrtmgp-data-lw-g128-210809.nc         ./coefficients_lw.nc
add_link_file ${basedir}/externals/rte-rrtmgp/rrtmgp/data/rrtmgp-data-sw-g112-210809.nc         ./coefficients_sw.nc
add_link_file ${basedir}/data/ECHAM6_CldOptProps_rrtmgp_lw.nc           ./rrtmgp-cloud-optics-coeffs-lw.nc
add_link_file ${basedir}/data/ECHAM6_CldOptProps_rrtmgp_sw.nc           ./rrtmgp-cloud-optics-coeffs-sw.nc

# namelist files
#
add_required_file ${basedir}/run/${atmo_namelist}                       ./

# dictionary file for output variable names
#
dict_file="dict.${EXPNAME}"
cat dict.iconam.mpim  > ${dict_file}
add_required_file ${basedir}/run/${dict_file}                           ./

# boundary conditions
#
# range of years for yearly files
# assume start_date and end_date have the format yyyy-...
start_year=$(( ${start_date%%-*} - 1 ))
end_year=$(( ${end_date%%-*} + 1 ))
#
# - well mixed greenhouse gases
datadir=${icon_data_poolFolder_gases}/greenhouse_gases
add_link_file $datadir/greenhouse_historical_plus.nc                    ./bc_greenhouse_gases.nc
#
# - ozone
datadir=${icon_data_poolFolder_gases}/ozone/ape/${grid_refinement}_${grid_label}
add_link_file ${datadir}/bc_ozone_ape.nc                                ./bc_ozone.nc

#--------------------------------------------------------------------------------------------------

# (5) Define the output

# Parameters for all output files
# -------------------------------
cat >> ${atmo_namelist} << EOF
&io_nml
 output_nml_dict  = "${dict_file}"
 netcdf_dict      = "${dict_file}"
 lnetcdf_flt64_output = .TRUE.
 itype_pres_msl   = 4
 restart_file_type= 5
 restart_write_mode = "joint procs multifile"    !not necessary/useful in default r2b4 setup
/
EOF

# Define output files
# -------------------
#
# output_<xyz>=yes : yes --> output files for <xyz>, any other value --> no files for <xyz>
#
# 3-dimensional files include 'ps' and 'pfull' to allow the vertical
# interpolation to pressure levels by cdo ap2pl.
#
if [[ "$output_atm_vgrid" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_vgrid"
 filename_format  = "<output_filename>_<levtype_l>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"       ! output_start = output_end
 output_end       = "${start_date}"       ! --> write once only irrespective of
 output_interval  = "${output_interval}"  !     the output interval and
 file_interval    = "${file_interval}"    !     the file interval
 ml_varlist       = 'zghalf'  , 'zg'      , 'dzghalf'
/
EOF
fi
#
if [[ "$output_atm_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 1
 reg_lon_def      = -180.,3600,180.
 reg_lat_def      = -90.,1800,90.
 m_levels         = "30...(nlev-1)"
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval_3d}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'pfull'   , 'zg'      ,
                    'rho'     , 'ta'      ,
                    'ua'      , 'va'      , 'wap'     ,
                    'hus'     , 'clw'     , 'cli'     ,
                    'qr'      , 'qs'      , 'qg'      ,
                    'cl'      ,
/
&output_nml
 output_filename  = "${EXPNAME}_dayavg_atm_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval_day}"
 file_interval    = "${file_interval_day_avg}"
 include_last     = .FALSE.
 ml_varlist       = 'pfull' , 'rho'   , 'ta'  ,
                    'ua'    , 'va'    , 'wap' ,
                    'hus'   , 'clw'   , 'cli' ,
                    'qr'    , 'qs'    , 'qg'  ,
                    'cl'    , 'cptgz' , 'rsd' ,
                    'rsu'   , 'rld'   , 'rlu' ,
/
EOF
fi
#
if [[ "$output_atm_2d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 1
 reg_lon_def      = -180.,3600,180.
 reg_lat_def      = -90.,1800,90.
 m_levels         = "30...(nlev-1)"
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'      ,
                    'rsdt'    ,
                    'rsut'    , 'rsutcs'  , 'rlut'    , 'rlutcs'  ,
                    'rsds'    , 'rsdscs'  , 'rlds'    , 'rldscs'  ,
                    'rsus'    , 'rsuscs'  , 'rlus'    ,
                    'ts'      ,
                    'albedo'  ,
                    'clt'     ,
                    'prlr'    , 'prls'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'qgvi'    , 'qrvi'    , 'qsvi'    ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'sfcwind' , 'uas'     , 'vas'     ,
                    'tas'     , 'dew2'    ,
                    'ptp'     ,
/
&output_nml
 output_filename  = "${EXPNAME}_dayavg_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 operation        = 'mean'
 output_grid      = .FALSE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval_day}"
 file_interval    = "${file_interval_day_avg}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'      , 'ts'      , 'albedo'  , 'clt'     ,
                    'rsut'    , 'rsutcs'  , 'rlut'    , 'rlutcs'  ,
                    'rsds'    , 'rsdscs'  , 'rlds'    , 'rldscs'  ,
                    'rsus'    , 'rsuscs'  , 'rlus'    , 'rsdt'    ,
                    'prlr'    , 'prls'    ,
                    'pr'      , 'prw'     , 'cllvi'   , 'clivi'   ,
                    'qgvi'    , 'qrvi'    , 'qsvi'    ,
                    'hfls'    , 'hfss'    , 'evspsbl' ,
                    'tauu'    , 'tauv'    ,
                    'sfcwind' , 'uas'     , 'vas'     , 'tas'     ,
/
&output_nml
 output_filename  = "${EXPNAME}_850_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 1
 reg_lon_def      = -180.,3600,180.
 reg_lat_def      = -90.,1800,90.
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 mode             = 2
 p_levels         = 85000
 pl_varlist       = 'ta', 'ua', 'va', 'wap', 'vor', 'hus ', 'clw', 'cli', 'gpsm', 'zg'
/
&output_nml
 output_filename  = "${EXPNAME}_250_atm_2d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 1
 reg_lon_def      = -180.,3600,180.
 reg_lat_def      = -90.,1800,90.
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 mode             = 2
 p_levels         = 25000
 pl_varlist       = 'ta', 'ua', 'va', 'wap', 'vor', 'hus ', 'clw', 'cli', 'gpsm', 'zg'
/
EOF
fi
#
if [[ "$output_phy_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_phy_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'           , 'pfull'        , 'zg'           ,
                    'tend_ta'      , 'tend_ta_dyn'  , 'tend_ta_phy'  ,
                    'tend_ta_rlw'  , 'tend_ta_rsw'  ,
                    'tend_ta_vdf'  , 'tend_ta_gwd'  ,
                    'tend_ta_cnv'  , 'tend_ta_cld'  ,
                    'tend_ua'      , 'tend_ua_dyn'  , 'tend_ua_phy'  ,
                    'tend_ua_vdf'  , 'tend_ua_gwd'  ,
                    'tend_ua_cnv'  ,
                    'tend_va'      , 'tend_va_dyn'  , 'tend_va_phy'  ,
                    'tend_va_vdf'  , 'tend_va_gwd'  ,
                    'tend_va_cnv'  ,
                    'tend_qhus'    , 'tend_qhus_dyn', 'tend_qhus_phy',
                    'tend_qhus_cld', 'tend_qhus_cnv', 'tend_qhus_vdf',
                    !'tend_qhus_mox'
/
EOF
fi
#
if [[ "$output_trc_3d" == "yes" ]]; then
  #
  cat >> ${atmo_namelist} << EOF
&output_nml
 output_filename  = "${EXPNAME}_trc_3d"
 filename_format  = "<output_filename>_<levtype_l>_<datetime2>"
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_start     = "${start_date}"
 output_end       = "${end_date}"
 output_interval  = "${output_interval}"
 file_interval    = "${file_interval}"
 include_last     = .FALSE.
 ml_varlist       = 'ps'        , 'pfull'     , 'zg'        ,
                    'mairvi_phy',
                    'mdryvi_phy',
                    'mh2ovi_phy',
                    'qhus_phy'  , 'mhusvi_phy', 'tend_mhusvi_phy',
                    'qclw_phy'  , 'mclwvi_phy', 'tend_mclwvi_phy',
                    'qcli_phy'  , 'mclivi_phy', 'tend_mclivi_phy',
/
EOF
fi

#--------------------------------------------------------------------------------------------------
