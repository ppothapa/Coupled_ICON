#!/bin/ksh

# ===========================================================================
# 
# Name: exp.dwd_run_ICON_09_R2B4N5_EPS.run
#
# Purpose: Run script for ICON at 160 km grid spacing on a global domain.
#          This is a low resolution version used for development purpose.

# Checks included:
# 2 forecast runs are performed:
# 1) forecast run without iterative IAU
# 2) forecast run with iterative IAU
# By comparing the output files, this test case checks the correctness of
# - iterative IAU
#
# If the environmental variable `tolerance_run` is set, only one iteration is
# executed.

#
# Author: Marek Jacob (DWD) et al.
#
# =========================================================================== 

set -x
make_and_change_to_experiment_dir # function in ../add_run_routines

# Combine START and MODEL if START_MODEL is not already set.
# START_MODEL is used to ease the execution of a machine that uses a complex
# mpirun command with multiple binaries
START_MODEL="${START_MODEL:=$START $MODEL}"

#--------------------------------------------------------------------------------------------------

# (1) Variables provided by the scripting mechanism

# EXPNAME                       = name of exp. in 'exp.<name>'
# basedir                       = base directory, where src/, run/ etc exist
# icon_data_poolFolder          = base directory, where grids/, input/ and setup/ exist
# nproma                        = blocking length for array dimensioning and inner loop lengths

icon_data_poolFolder="${icon_data_rootFolder:-/pool/data/ICON}/buildbot_data/nwp"

# =======================================================================
# Setup - experiment
# ======================================================================

# ===========================================================================
# This experiment describes a ICON global experiment using the physics packages that are
# used at DWD for global ensembles in production. This simulation computes a few time steps on 
# a low-resolution grid. The setup is for development purposes.
#
# Options that are not working on GPU at the moment are replaced or disabled. 
# The original settings are marked by "TODO". These should be reactivated as soon
# as the corresponding option is ported.


# ----------------------------------------------------------------------
# path definitions
# ----------------------------------------------------------------------

GRIDDIR=${icon_data_poolFolder}/grids/public/edzw/ # grid and external parameter directory

# absolute path to input directory - for the time being
INDIR=${icon_data_poolFolder}/Checksuite_data_small/EPS_R2B4N5

# grids_folder variable is require by make_runscripts
grids_folder=$INDIR

# ----------------------------------------------------------------------
# link input data: external parameters
# ----------------------------------------------------------------------

# grids are automatically linked through make_runscripts
ln -s ${GRIDDIR}/icon_grid_0011_R02B03_R.nc iconR2B03_DOM00.nc
ln -s ${INDIR}/icon_grid_0012b_R02B04_G.nc iconR2B04_DOM01.nc
ln -s ${INDIR}/icon_grid_0099_R02B05_N02.nc iconR2B05_DOM02.nc

ln -s ${INDIR}/external_parameter_icon_domain1_DOM01_tiles.nc extpar_iconR2B04_DOM01.nc
ln -s ${INDIR}/external_parameter_icon_domain2_DOM02_tiles.nc extpar_iconR2B05_DOM02.nc

# files needed for radiation
ln -s ${basedir}/externals/ecrad/data ecrad_data

# ----------------------------------------------------------------------
# global namelist settings
# ----------------------------------------------------------------------

# the namelist filename
atmo_namelist=NAMELIST_${EXPNAME}_atm

# global timing
start_date="2022-03-01T00:00:00Z"
ndays_restart=60
dt_restart=`expr ${ndays_restart} \* 86400`

# possible dtime values (large values might be unstable)
# 1 | 2 | 3 | 4 | 5 | 6 | 8 | 9 | 10 | 12 | 15 | 18 | 20 | 24 | 25 | 27 | 30 | 36 | 40 | 45 | 50 | 54 | 60 | 72 | 75 
# 90 | 100 | 108 | 120 | 135 | 150 | 180 | 200 | 216 | 225 | 270 | 300 | 360 | 450 | 540 | 600 | 675 | 900
# 1080 | 1350 | 1800 | 2700 | 5400
dtime=540
nsteps=9

# the grid parameters
atmo_dyn_grids="iconR2B04_DOM01.nc iconR2B05_DOM02.nc"
atmo_rad_grids="iconR2B03_DOM00.nc"

ln -s ${INDIR}/an_20220228.grb an_R02B04_DOM01.grb
ln -s ${INDIR}/fc_R02B04.20220228223000_joined fg_R02B04_DOM01.grb
ln -s ${INDIR}/fc_R02B05_N02.20220228223000_joined fg_R02B05_DOM02.grb

# ----------------------------------------------------------------------
# create ICON master namelist
# ----------------------------------------------------------------------

# For a complete list see Namelist_overview and Namelist_overview.pdf

cat > icon_master.namelist << EOF
&master_nml
lrestart               = .false.
/
&time_nml
ini_datetime_string = "$start_date"
dt_restart          = $dt_restart
/
&master_model_nml
 model_type=1
 model_name="ATMO"
 model_namelist_filename="$atmo_namelist"
 model_min_rank=1
 model_max_rank=65536
 model_inc_rank=1
/
EOF


# ----------------------------------------------------------------------
# model namelists
# ----------------------------------------------------------------------

# reconstrcuct the grid parameters in namelist form
dynamics_grid_filename=""
for gridfile in ${atmo_dyn_grids}; do
  dynamics_grid_filename="${dynamics_grid_filename} '${gridfile}',"
done
radiation_grid_filename=""
for gridfile in ${atmo_rad_grids}; do
  radiation_grid_filename="${radiation_grid_filename} '${gridfile}',"
done

tot_iter=2
if [[ -n "$tolerance_run" ]]; then
  tot_iter=1
fi

for iter in $(seq $tot_iter); do

  if [ "$iter" -eq 1 ] ; then

    echo "#############################################################"
    echo "###               Run without iterative IAU               ###"
    echo "#############################################################"

    # run without iterative IAU
    iterate_iau=".FALSE."

  elif [ "$iter" -eq 2 ] ; then

    echo "##############################################################"
    echo "###                 Run with iterative IAU                 ###"
    echo "##############################################################"

    iterate_iau=".TRUE."

  fi

cat > ${atmo_namelist} << EOF
&parallel_nml
 nproma          =  ${nproma}
 !nblocks_c       =  ${nblocks_c:-0} ! does not work with nesting. TODO make this work (maybe)
 nblocks_c       =  0
 nproma_sub      = 2000 ! radiation nproma
 p_test_run      = .false.
 l_test_openmp   = .true.
 l_log_checks    = .true.
 num_io_procs    =  0
 num_restart_procs = 0
 iorder_sendrecv =  3
 proc0_shift     = 0
 use_omp_input   = .false.
/
&grid_nml
 dynamics_grid_filename  = ${dynamics_grid_filename}
 radiation_grid_filename = ${radiation_grid_filename}
 dynamics_parent_grid_id = 0,1
 lredgrid_phys           = .true.,.true.
 lfeedback               = .true.
 ifeedback_type          = 2
 start_time              = 0., -5400.,
 end_time                = 0., 432000.    ! ** bewirkt, dass das Nest nur bis vv=120h laueft **
/
&run_nml
 num_lev        = 90, 60
 lvert_nest     = .true.
 nsteps         = ${nsteps}
 dtime          = ${dtime}     ! timestep in seconds
 ldynamics      = .TRUE.       ! dynamics
 ltransport     = .true.
 ntracer        = 5            ! default: 0
 iforcing       = 3
 ltestcase      = .false.
 msg_level      = 7 ! detailed report during integration
 ltimer         = .true.
 timers_level   = 10
 check_uuid_gracefully = .true.
 output         = "nml" ! "none" to turn off output
/
&initicon_nml
 init_mode                    = 5
 dt_iau                       = 10800
 dt_shift                     = -5400
 iterate_iau                  = ${iterate_iau}
 zpbl1                        = 500.
 zpbl2                        = 1000.
 dwdfg_filename               = "<path>fg_R<nroot0>B<jlev>_DOM<idom>.grb"
 dwdana_filename              = "<path>an_R<nroot0>B<jlev>_DOM<idom>.grb"
 ana_varnames_map_file        = "map_file.ana"
 ltile_coldstart              = .false.
 lvert_remap_fg               = .false.
 use_lakeiceana               = .true.
 lp2cintp_incr                = .TRUE.
 lp2cintp_sfcana              = .TRUE.
 pinit_seed                   = 0          ! seed for perturbation of initial model state. no perturbation by default
 pinit_amplitude              = 1e-14      ! amplitude of perturbation 
/
&io_nml
 itype_pres_msl               = 5         ! (1) 3: IFS-type extrapolation
 itype_rh                     = 1         ! (1) 2: mixed phase (water and ice)
 output_nml_dict              = 'map_file.fc'
 dt_checkpoint                = 2592000.  ! 30 days
 lnetcdf_flt64_output         = .TRUE.    ! double precision output
/
&nwp_phy_nml
inwp_gscp       = 1               ! 10 in test case 35
inwp_convection = 1
inwp_radiation  = 4
inwp_cldcover   = 1 ! 3 geaendert ab Test2
inwp_turb       = 1
inwp_satad      = 1
inwp_sso        = 1
inwp_gwd        = 1
inwp_surface    = 1
latm_above_top  = .false.,.true. 
ldetrain_conv_prec = .false.,.false.
efdt_min_raylfric = 7200.
itype_z0         = 2
icapdcycl        = 3
icpl_aero_conv   = 1
icpl_aero_gscp   = 1
icpl_o3_tp       = 1
dt_rad           = 2160.
dt_conv          = 720., 360.
dt_sso           = 1440.,720.
dt_gwd           = 1440.,
/
&nwp_tuning_nml
itune_albedo  = 1
tune_gkwake   = 1.5
tune_gfrcrit  = 0.425
tune_grcrit   = 0.5
tune_gkdrag   = 0.16
tune_zvz0i    = 0.85
tune_box_liq_asy = 3.25
tune_minsnowfrac = 0.2
tune_gfluxlaun  = 3.75e-3
tune_rcucov = 0.075
tune_rhebc_land = 0.825
/
&turbdiff_nml
tkhmin       = 0.6
tkhmin_strat = 1.0
tkmmin       = 0.75
tkmmin_strat = 1.5
pat_len      =  750.
c_diff       =  0.2
rat_sea      =  0.8
rlam_heat    = 10.
ltkesso      = .true.
frcsmot      = 0.2
imode_frcsmot = 2
icldm_turb   = 1
itype_sher   = 1
ltkeshs      = .true.
a_hshr       = 2.0
/
&lnd_nml
  ntiles         = 3
  nlev_snow      = 1
  lmulti_snow    = .false.
  itype_heatcond = 3
  idiag_snowfrac = 20
  itype_snowevap = 2
  itype_canopy   = 2
  lsnowtile      = .true.
  lseaice        = .TRUE.
  llake          = .true.
  itype_lndtbl   = 4
  itype_evsl     = 4
  itype_root     = 2
  cwimax_ml      = 5.e-4
  c_soil         = 1.25
  c_soil_urb     = 0.5
  sstice_mode    = 2 ! TODO: test it mode 2 and probably port it
  lprog_albsi    = .true.
  hice_min       = 0.5 ! For Buildbot Testing. Let even thick ice be taken out of the list_seaice_idx
/
&radiation_nml
 ecrad_isolver       = 2
 irad_o3             = 79
 irad_aero           = 6
 albedo_type         = 2 ! Modis albedo
 direct_albedo       = 4
 direct_albedo_water = 3
 albedo_whitecap     = 1
 vmr_co2             = 390.e-06 ! values representative for 2012
 vmr_ch4             = 1800.e-09
 vmr_n2o             = 322.0e-09
 vmr_o2              = 0.20946
 vmr_cfc11           = 240.e-12
 vmr_cfc12           = 532.e-12
 ecrad_data_path     = './ecrad_data'
/
&nonhydrostatic_nml
 itime_scheme    = 4
 vwind_offctr    = 0.2
 damp_height     = 44000.
 rayleigh_coeff  = 0.5
 divdamp_order   = 24
 divdamp_fac     = 0.004
 divdamp_type    = 32
 igradp_method   = 3
 l_zdiffu_t      = .true.
 thslp_zdiffu    = 0.02
 thhgtd_zdiffu   = 125.
 htop_moist_proc = 22500.
 hbot_qvsubstep  = 16000.
/
&sleve_nml
 min_lay_thckn   = 20.
 max_lay_thckn   = 400.
 htop_thcknlimit = 14000.
 top_height      = 75000.
 stretch_fac     = 0.9
 decay_scale_1   = 4000.
 decay_scale_2   = 2500.
 decay_exp       = 1.2
 flat_height     = 16000.
/
&dynamics_nml
 iequations     = 3
 idiv_method    = 1
 divavg_cntrwgt = 0.50
 lcoriolis      = .TRUE.
/
&transport_nml
  ctracer_list  = '12345'
 ivadv_tracer   = 3,3,3,3,3
 itype_hlimit   = 3,4,4,4,4,
 ihadv_tracer   = 52,2,2,2,2,
 llsq_svd       = .true. ! TODO: set to .false. and overwrite it with .true. in crosscheck if _OPENACC
 beta_fct       = 1.005
 iadv_tke       = 0
/
&diffusion_nml
 hdiff_order      = 5
 itype_vn_diffu   = 1
 itype_t_diffu    = 2
 hdiff_efdt_ratio = 24.
 hdiff_smag_fac   = 0.025
 lhdiff_vn        = .TRUE.
 lhdiff_temp      = .TRUE.
/
&interpol_nml
nudge_zone_width  = 8
lsq_high_ord      = 3
l_intp_c2l        = .true.
l_mono_c2l        = .true.
rbf_scale_mode_ll = 2
support_baryctr_intp=.FALSE., ! TODO: check why this is not working with nvfortran and set to .true.
/
&gridref_nml
 grf_intmethod_e  = 6
 grf_scalfbk      = 2
 denom_diffu_v    = 150.
/
&extpar_nml
 itopo                = 1
 n_iter_smooth_topo   = 1,1
 hgtdiff_max_smooth_topo = 750.,750.,
 heightdiff_threshold = 3000.
 itype_vegetation_cycle = 2
/
&ensemble_pert_nml
 use_ensemble_pert              = .true.
 timedep_pert                   = 2
/
&gribout_nml
 preset                          = "ensemble"
 perturbationNumber              = 1
 localTypeOfEnsembleForecast     = 101,
 numberOfForecastsInEnsemble     = 40,
 ldate_grib_act                  = .true.
 lgribout_24bit                  = .false.
 tablesVersion                   = 14
 backgroundProcess               = 0
 localNumberOfExperiment         = 52
 productionStatusOfProcessedData = 2
 generatingProcessIdentifier     = 1, 2                              ! 2 .. nest
/
&synsat_nml
lsynsat=.false. ! .false.,.true., ! requires RTTOV library - left out for this test
/

!TODO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! TTTTTT  OOO  DDD   OOO  
!   TT   O   O D  D O   O 
!   TT   O   O D  D O   O 
!   TT   O   O D  D O   O 
!   TT    OOO  DDD   OOO  
!
! Checkout the original output_nml namelists and make sure that all output can
! be written and is correct. Note, that not all variables can be verified using
! Probtest due to their chaotic behavior and the relatively small Probtest
! ensemble of just 10 members.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
&output_nml
 ! This output is to test the iterative IAU reset. It is used to compare the
 ! iterative and non-iterative execution of this experiment at timestep >= 1.
 output_filename  = "${EXPNAME}_${iter}_winds"
 dom              = 1,2                       ! both domains
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_bounds    = ${dtime},99999,${dtime}   ! start, end, increment, 4 steps
 steps_per_file   = 99999
 include_last     = .TRUE.
 ml_varlist       = 'vn','w','t_g','w_so','t_so','tot_prec'
/
EOF

if [ "$iter" -eq 1 ] ; then # write output in first iteration (with iterative IAU)
cat >> ${atmo_namelist} << EOF
&output_nml
 ! This namelist is designed for Probtest tolerance testing
 ! The probability that one cpu run is not within the tolerance spread produced
 ! by 10 other cpu runs is less than 0.3% per variable.
 output_filename  = "${EXPNAME}_atm_3d"
 filename_format  = "<output_filename>_DOM<physdom>_<levtype_l>_<datetime2>"
 dom              = 1                         ! global domain
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_bounds    = 0,$((3*dtime)),${dtime}   ! start, end, increment, 4 steps
 steps_per_file   = 4
 include_last     = .TRUE.
 ml_varlist       =
  'cape', 'clct_mod', 'ddt_qc_conv', 'ddt_temp_radlw', 'ddt_v_sso',
  'ddt_vn_pgr', 'div', 'div_ic', 'hdef_ic', 'lwflxall', 'rho_snow', 'runoff_g',
  'temp', 'temp_ifc', 'thbclr_s', 'tke', 'tot_prec', 'tot_qi_dia',
  'u', 'v', 'v_10m', 'vt'
/

&output_nml
 ! This namelist is designed for Probtest tolerance testing
 output_filename  = "${EXPNAME}_atm_3d"
 filename_format  = "<output_filename>_DOM<physdom>_<levtype_l>_<datetime2>"
 dom              = 2                         ! nested domain
 filetype         = 5
 remap            = 0
 output_grid      = .TRUE.
 output_bounds    = 0,$((3*dtime)),${dtime}   ! start, end, increment, 4 steps
 steps_per_file   = 4
 include_last     = .TRUE.
 ml_varlist       =
  'cape_ml', 'cin_ml', 'clct_mod', 'cldepth', 'ddt_temp_drag', 'ddt_temp_radlw',
  'ddt_tke_hsh', 'dyn_gust', 'exner_pr', 'gust10', 'hdef_ic', 'lhfl_bs',
  'lwflx_up_clr', 'lwflxall', 'rh', 'rho', 'rho_ic', 'runoff_g', 'shfl_s',
  'sp_10m', 't_sk', 'temp', 'temp_ifc', 'tempv', 'thbclr_s', 'theta_v',
  'tqc_dia', 'tqs'
 pl_varlist           = 'temp'
 p_levels             = 100, 200, 92500, 100000
 hl_varlist           = 'temp'
 h_levels             = 5000, 3000, 1500
/

&output_nml
 ! This namelist is designed for Probtest tolerance testing
 output_filename  = "${EXPNAME}_atm_3d_ll"
 filename_format  = "<output_filename>_DOM<physdom>_<levtype_l>_<datetime2>"
 dom              = 1                         ! global domain
 filetype         = 5
 remap            = 1
 output_grid      = .TRUE.
 output_bounds    = 0,$((3*dtime)),${dtime}   ! start, end, increment, 4 steps
 steps_per_file   = 20
 include_last     = .FALSE.
 reg_lon_def      = 0.,2.5,359.501
 reg_lat_def      = -90.,2.5,90.
 output_grid      = .false.
 ml_varlist       = 'u', 'v'
/

&output_nml
 ! This namelist is designed for Probtest tolerance testing
 output_filename  = "${EXPNAME}_atm_3d_ll"
 filename_format  = "<output_filename>_DOM<physdom>_<levtype_l>_<datetime2>"
 dom              = 2                         ! nested domain
 filetype         = 5
 remap            = 1
 output_grid      = .TRUE.
 output_bounds    = 0,$((3*dtime)),${dtime}   ! start, end, increment, 4 steps
 steps_per_file   = 20
 include_last     = .FALSE.
 reg_lon_def      = 0.,2.5,359.501
 reg_lat_def      = -90.,2.5,90.
 output_grid      = .false.
 ml_varlist       = 'rho'
/

&meteogram_output_nml
  lmeteogram_enabled = .FALSE., .TRUE. ! generate no more than one meteogram file. Otherwise probtest will complain.
  ldistributed       = .FALSE., .FALSE.
  loutput_tiles      = .TRUE.
  n0_mtgrm           = 0
  ninc_mtgrm         = 2
  stationlist_tot = 47.065, 7.094, 'La Neuveville',
    49.931, 9.568, 'Neustadt am Main',
    54.107, 10.816, 'Neustadt in Holstein',
    48.193, 14.903, 'Neustadtl an der Donau',
    51.037, 5.862, 'Nieuwstadt',
    54.942, 22.867, 'Kudirkos Naumiestis',
    43.852, 18.385, 'Sarajevo-Novi Grad'

  max_time_stamps    = 6
  zprefix            = 'Meteogram_', 'Meteogram_'
  var_list           = '  '
/

EOF
fi # [ "$iter" -eq 1 ]

cat >> ${atmo_namelist} << EOF
!output!! ser_nml: serialization configuration ----------------------------------------
!&ser_nml
! ser_initialization          =                            1,12,12 !
! ser_output_diag             =                            0,12,12 !
! ser_output_diag_dyn             =                        0,12,12 !
! ser_latbc_data              =                            1,12,12 !
! ser_dynamics                =                            1,12,12 !
! ser_nesting_compute_tendencies     =                     0,12,12 !
! ser_nesting_boundary_interpolation =                     0,12,12 !
! ser_nesting_relax_feedback =                             0,12,12 !
! ser_diffusion               =                            1,12,12 !
! ser_step_advection          =                            1,12,12 !
! ser_physics                 =                            0,12,12 !
! ser_surface                 =                            1,12,12 !
! ser_microphysics            =                            1,12,12 !
! ser_turbtrans               =                            1,12,12 !
! ser_turbdiff                =                            1,12,12 !
! ser_lhn                     =                            0,12,12 !
! ser_cover                   =                            1,12,12 !
! ser_radiation               =                            0,12,12 !
! ser_radheat                 =                            1,12,12 !
! ser_gwdrag                  =                            1,12,12 !
! ser_convection              =                            1,12,12 !
! ser_nudging                 =                            0,12,12 !
! ser_time_loop_end           =                            0,12,12 !
! ser_nfail                   =                            0
! ser_nreport                 =                            10
! ser_all_debug               =                            1, 12, 12 
! ser_debug                   =                        .FALSE.      ! serialize the debug statements from mo_ser_debug
!/
EOF

cat > map_file.ana << EOF2
# internal name     GRIB2 shortName
theta_v             THETA_V
rho                 DEN
vn                  VN
u                   U
v                   V
w                   W
tke                 TKE
temp                T
pres                P
qv                  QV
qc                  QC
qi                  QI
qr                  QR
qs                  QS
t_g                 T_G
qv_s                QV_S
fr_seaice           FR_ICE
alb_si              ALB_SEAICE
t_ice               T_ICE
h_ice               H_ICE
t_snow              T_SNOW
freshsnow           FRESHSNW
snowfrac_lc         SNOWC
w_snow              W_SNOW
rho_snow            RHO_SNOW
h_snow              H_SNOW
w_i                 W_I
w_so                W_SO
w_so_ice            W_SO_ICE
t_so                T_SO
smi                 SMI
gz0                 Z0
pres_sfc            PS
z_ifc               HHL

t_mnw_lk            T_MNW_LK
t_wml_lk            T_WML_LK
h_ml_lk             H_ML_LK
t_bot_lk            T_BOT_LK
c_t_lk              C_T_LK
t_b1_lk             T_B1_LK
h_b1_lk             H_B1_LK
EOF2

cat > map_file.fc << EOF3
# GRIB2 shortName   internal name
  alb_rad           ALBDIF
  alb_seaice        ALB_SI
  apab_s            ASWFLX_PAR_SFC
  aswdifd_s         ASODIFD_S
  aswdifu_s         ASODIFU_S
  aswdir_s          ASODIRD_S
  cape_con          CAPE
  den               RHO
  dtke_con          DDT_TKE_PCONV
  dtke_hsh          DDT_TKE_HSH
  fi                GEOPOT
  fr_ice            FR_SEAICE
  freshsnw          FRESHSNOW
  hhl               Z_IFC
  hsurf             TOPOGRAPHY_C
  p                 PRES
  pmsl              PRES_MSL
  ps                PRES_SFC
  relhum            RH
  relhum_2m         RH_2M
  snowc             SNOWFRAC_LC
  sobs_rad          SOB_S
  t                 TEMP
  t_sea             T_SEASFC
  thbs_rad          THB_S
  vmax_10m          GUST10
  z0                GZ0
EOF3

  $START_MODEL
  EXIT_STATUS=$?

  if [ "$EXIT_STATUS" -ne "0" ]; then
    echo "ICON EXIT_STATUS: $EXIT_STATUS"
    exit $EXIT_STATUS
  fi

# ----------------------------------------------------------------------------
done # model run iterations
# ----------------------------------------------------------------------------

ERROR_SUM=0

# Iteration 1 output filenames
FILE1_DOM01="${EXPNAME}_1_winds_DOM01_ML_0001.nc"
FILE1_DOM02="${EXPNAME}_1_winds_DOM02_ML_0001.nc"
# Iteration 2 output filenames
FILE2_DOM01="${EXPNAME}_2_winds_DOM01_ML_0001.nc"
FILE2_DOM02="${EXPNAME}_2_winds_DOM02_ML_0001.nc"

set +x

if [[ -z "${tolerance_run:-}" ]]; then

  echo "Check iterative IAU"
  DIFF_STATUS_IAU=0

  # compare_output_files is defined in ./add_run_routines
  compare_output_files "${FILE1_DOM01}" "${FILE2_DOM01}"
  DIFF_STATUS_IAU=$((DIFF_STATUS_IAU + $?))
  if [[ $(echo $atmo_dyn_grids | wc -w) -gt 1 ]]; then
    compare_output_files "${FILE1_DOM02}" "${FILE2_DOM02}"
    DIFF_STATUS_IAU=$((DIFF_STATUS_IAU + $?))
  fi

  ERROR_SUM=$((ERROR_SUM + DIFF_STATUS_IAU))

  if [[ $DIFF_STATUS_IAU -ne 0 ]]; then
   echo " "
   echo "IAU test FAILED"
   echo " "
  fi

  echo "Cdo comparison ERROR_SUM: $ERROR_SUM"

else

  echo "Skip iterative checks"

fi

exit $ERROR_SUM

# This exit above avoids the execution of the script exec.iconrun which is added below.
